{"version":3,"sources":["../src/js/VM_to_View.js"],"names":["d3","draw","ViewModel","radius","displacement","Classes","taken","course","requiredNotTaken","available","svg","svgGroups","String","d","svgNotTakenDivs","svgContainer","svgRequiredGroups","positionPreReqs","positionTopBar","topCourses","$","length","width","placement","i","top","left"],"mappings":";;AAEA,IAAA,gBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA,C,CAFA;;;AAIA,IAAA,SAAA;AACAA,EAAE,CAAFA,IAAAA,CAAAA,8BAAAA,EAAAA,IAAAA,CAA6C,UAAA,IAAA,EAAgB;AACzDC,EAAAA,IAAI,CAAJA,IAAI,CAAJA;AACAC,EAAAA,SAAS,GAATA,IAAAA;AAFJF,CAAAA;;AAKA,SAAA,IAAA,CAAA,SAAA,EAAyB;AAErB,MAAMG,MAAM,GAAZ,EAAA;AACA,MAAMC,YAAY,GAAGD,MAAM,GAA3B,EAAA;AAEA,MAAIE,OAAO,GAAGH,SAAS,CAAvB,OAAA;AACA,MAAII,KAAK,GAAG,OAAO,CAAP,MAAA,CAAe,UAAA,MAAA,EAAM;AAAA,WAAIC,MAAM,CAANA,KAAAA,KAAJ,IAAA;AAAjC,GAAY,CAAZ;AACA,MAAIC,gBAAgB,GAAG,OAAO,CAAP,MAAA,CAAe,UAAA,MAAA,EAAM;AAAA,WAAKD,MAAM,CAANA,KAAAA,KAAAA,KAAAA,IAA0BA,MAAM,CAANA,QAAAA,KAA/B,IAAA;AAA5C,GAAuB,CAAvB;AACA,MAAIE,SAAS,GAAG,OAAO,CAAP,MAAA,CAAe,UAAA,MAAA,EAAM;AAAA,WAAKF,MAAM,CAANA,KAAAA,KAAAA,KAAAA,IAA0BA,MAAM,CAANA,QAAAA,KAA/B,KAAA;AARhB,GAQL,CAAhB,CARqB,CAWrB;;AACA,MAAIG,GAAG,GAAGV,EAAE,CAAFA,MAAAA,CAAAA,MAAAA,EAAAA,MAAAA,CAAAA,MAAAA,EAAAA,MAAAA,CAAAA,KAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EAAV,aAAUA,CAAV;AAKA,MAAIW,SAAS,GAAG,GAAG,CAAH,SAAA,CAAA,UAAA,EAAA,IAAA,CAAA,SAAA,EAAA,KAAA,GAAA,MAAA,CAAA,KAAA,EAAA,IAAA,CAAA,IAAA,EAGA,UAAA,CAAA,EAAa;AAAC,WAAOC,MAAM,CAACC,CAAC,CAARD,IAAM,CAANA,GAAiBA,MAAM,CAACC,CAAC,CAAhC,MAA8B,CAA9B;AAHd,GAAA,EAAA,IAAA,CAIN,UAAA,CAAA,EAAa;AAAC,WAAOD,MAAM,CAACC,CAAC,CAAf,MAAa,CAAb;AAJR,GAAA,EAAA,OAAA,CAAA,qBAAA,EAjBK,IAiBL,CAAhB,CAjBqB,CAwBrB;;AAEA,MAAIC,eAAe,GAAGd,EAAE,CAAFA,MAAAA,CAAAA,MAAAA,EAAAA,MAAAA,CAAAA,MAAAA,EAAAA,MAAAA,CAAAA,KAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EAAtB,OAAsBA,CAAtB;AAKA,MAAIe,YAAY,GAAG,eAAe,CAAf,SAAA,CAAA,OAAA,EAAA,IAAA,CAAA,KAAA,EAAA,KAAA,GAAA,MAAA,CAAA,KAAA,EAAA,IAAA,CAAA,IAAA,EAGH,UAAA,CAAA,EAAa;AACrB,WAAOH,MAAM,CAACC,CAAC,CAARD,IAAM,CAANA,GAAiBA,MAAM,CAACC,CAAC,CAAhC,MAA8B,CAA9B;AAJW,GAAA,EAAA,IAAA,CAMT,UAAA,CAAA,EAAa;AACf,WAAOD,MAAM,CAACC,CAAC,CAAf,MAAa,CAAb;AAPW,GAAA,EAAA,IAAA,CAAA,OAAA,EA/BE,yBA+BF,CAAnB,CA/BqB,CA2CrB;;AACA,MAAIG,iBAAiB,GAAG,eAAe,CAAf,SAAA,CAAA,OAAA,EAAA,IAAA,CAAA,gBAAA,EAAA,KAAA,GAAA,MAAA,CAAA,KAAA,EAAA,IAAA,CAAA,IAAA,EAGR,UAAA,CAAA,EAAa;AACrB,WAAOJ,MAAM,CAACC,CAAC,CAARD,IAAM,CAANA,GAAiBA,MAAM,CAACC,CAAC,CAAhC,MAA8B,CAA9B;AAJgB,GAAA,EAAA,IAAA,CAMd,UAAA,CAAA,EAAa;AACf,WAAOD,MAAM,CAACC,CAAC,CAAf,MAAa,CAAb;AAPgB,GAAA,EAAA,IAAA,CAAA,OAAA,EAAxB,4BAAwB,CAAxB;AAWAI,EAAAA,eAAe;AACfC,EAAAA,cAxDqB,GAAA,CA2DrB;;AAEA,WAAA,cAAA,GAA0B;AACtB,QAAIC,UAAU,GAAGC,CAAC,CAAlB,sBAAkB,CAAlB;AACA,QAAMC,MAAM,GAAGF,UAAU,CAAzB,MAAA;AACA,QAAMG,KAAK,GAAGF,CAAC,CAADA,cAAC,CAADA,CAAAA,KAAAA,KAAd,EAAA;AACA,QAAMG,SAAS,GAAGD,KAAK,GAAvB,MAAA;AACA,QAAIE,CAAC,GAAL,CAAA;AALsB,QAAA,yBAAA,GAAA,IAAA;AAAA,QAAA,iBAAA,GAAA,KAAA;AAAA,QAAA,cAAA,GAAA,SAAA;;AAAA,QAAA;AAMtB,WAAA,IAAA,SAAA,GAAmBL,UAAnB,CAAA,MAAA,CAAA,QAAA,CAAmBA,EAAnB,EAAA,KAAA,EAAA,EAAA,yBAAA,GAAA,CAAA,KAAA,GAAA,SAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,EAAA,yBAAA,GAAA,IAAA,EAA+B;AAAA,YAAtBZ,MAAsB,GAAA,KAAA,CAAA,KAAA;AAC3Ba,QAAAA,CAAC,CAADA,MAAC,CAADA,CAAAA,GAAAA,CAAc;AACVK,UAAAA,GAAG,EAAEL,CAAC,CAADA,cAAC,CAADA,CAAAA,MAAAA,KAAAA,CAAAA,IAAgCjB,MAAM,GADjC,EACLiB,CADK;AAEVM,UAAAA,IAAI,EAAEF,CAAC,GAADA,SAAAA,GAAgB;AAFZ,SAAdJ;AAIAI,QAAAA,CAAC;AACJ;AAZqB,KAAA,CAAA,OAAA,GAAA,EAAA;AAAA,MAAA,iBAAA,GAAA,IAAA;AAAA,MAAA,cAAA,GAAA,GAAA;AAAA,KAAA,SAAA;AAAA,UAAA;AAAA,YAAA,CAAA,yBAAA,IAAA,SAAA,CAAA,QAAA,CAAA,IAAA,IAAA,EAAA;AAAA,UAAA,SAAA,CAAA,QAAA,CAAA;AAAA;AAAA,OAAA,SAAA;AAAA,YAAA,iBAAA,EAAA;AAAA,gBAAA,cAAA;AAAA;AAAA;AAAA;AAazB;;AAED,WAAA,eAAA,GAA2B;AACvBJ,IAAAA,CAAC,CAADA,UAAC,CAADA,CAAAA,GAAAA,CAAkB;AACdK,MAAAA,GAAG,EADW,GAAA;AAEdC,MAAAA,IAAI,EAAE;AAFQ,KAAlBN;AAIAA,IAAAA,CAAC,CAADA,UAAC,CAADA,CAAAA,GAAAA,CAAkB;AACdK,MAAAA,GAAG,EADW,GAAA;AAEdC,MAAAA,IAAI,EAAE;AAFQ,KAAlBN;AAIAA,IAAAA,CAAC,CAADA,UAAC,CAADA,CAAAA,GAAAA,CAAkB;AACdK,MAAAA,GAAG,EADW,GAAA;AAEdC,MAAAA,IAAI,EAAE;AAFQ,KAAlBN;AAIAA,IAAAA,CAAC,CAADA,UAAC,CAADA,CAAAA,GAAAA,CAAkB;AACdK,MAAAA,GAAG,EADW,GAAA;AAEdC,MAAAA,IAAI,EAAE;AAFQ,KAAlBN;AAIAA,IAAAA,CAAC,CAADA,UAAC,CAADA,CAAAA,GAAAA,CAAkB;AACdK,MAAAA,GAAG,EADW,GAAA;AAEdC,MAAAA,IAAI,EAAE;AAFQ,KAAlBN;AAIAA,IAAAA,CAAC,CAADA,UAAC,CAADA,CAAAA,GAAAA,CAAkB;AACdK,MAAAA,GAAG,EADW,GAAA;AAEdC,MAAAA,IAAI,EAAE;AAFQ,KAAlBN;AAIAA,IAAAA,CAAC,CAADA,UAAC,CAADA,CAAAA,GAAAA,CAAkB;AACdK,MAAAA,GAAG,EADW,GAAA;AAEdC,MAAAA,IAAI,EAAE;AAFQ,KAAlBN;AAIAA,IAAAA,CAAC,CAADA,UAAC,CAADA,CAAAA,GAAAA,CAAkB;AACdK,MAAAA,GAAG,EADW,GAAA;AAEdC,MAAAA,IAAI,EAAE;AAFQ,KAAlBN;AAIH;AACJ;;AAED,CAAA,GAAA,gBAAA,CAAA,GAAA","sourcesContent":["//IMPORT DATA\n\nimport {run} from \"./ViewConnections\";\n\nlet ViewModel;\nd3.json(\"../Model/ViewModel_Test.json\").then(function (data) {\n    draw(data);\n    ViewModel = data;\n});\n\nfunction draw(ViewModel) {\n\n    const radius = 20;\n    const displacement = radius + 20;\n\n    let Classes = ViewModel.Classes;\n    let taken = Classes.filter(course => course.taken === true);\n    let requiredNotTaken = Classes.filter(course => (course.taken === false && course.required === true));\n    let available = Classes.filter(course => (course.taken === false && course.required === false));\n\n\n    //NOT TAKEN COURSES. Color: Red\n    let svg = d3.select(\"body\")\n        .select(\"#GUI\")\n        .append(\"div\")\n        .attr(\"id\", \"svgNotTaken\");\n\n    let svgGroups = svg.selectAll(\"notTaken\")\n        .data(available)\n        .enter().append(\"div\")\n        .attr(\"id\", function (d) {return String(d.dept) + String(d.course)})\n        .html(function (d) {return String(d.course)})\n        .classed(\"draggable available\", true);\n\n    //TAKEN COURSES. Color: Green\n\n    let svgNotTakenDivs = d3.select(\"body\")\n        .select(\"#GUI\")\n        .append(\"div\")\n        .attr(\"id\", \"graph\");\n\n    let svgContainer = svgNotTakenDivs.selectAll(\"taken\")\n        .data(taken)\n        .enter().append(\"div\")\n        .attr(\"id\", function (d) {\n            return String(d.dept) + String(d.course)\n        })\n        .html(function (d) {\n            return String(d.course)\n        })\n        .attr(\"class\", \"draggable taken inGraph\");\n\n\n    //REQUIRED, NOT TAKEN COURSES Color: Gray\n    let svgRequiredGroups = svgNotTakenDivs.selectAll(\"taken\")\n        .data(requiredNotTaken)\n        .enter().append(\"div\")\n        .attr(\"id\", function (d) {\n            return String(d.dept) + String(d.course)\n        })\n        .html(function (d) {\n            return String(d.course)\n        })\n        .attr(\"class\", \"draggable required inGraph\");\n\n    positionPreReqs();\n    positionTopBar();\n\n\n    //-----------     HELPER FUNCTIONS     -----------\n\n    function positionTopBar() {\n        let topCourses = $(\".draggable.available\");\n        const length = topCourses.length;\n        const width = $(\"#svgNotTaken\").width() - 75;\n        const placement = width / length;\n        let i = 1;\n        for (let course of topCourses) {\n            $(course).css({\n                top: $(\"#svgNotTaken\").height()/2 - (radius+10) ,\n                left: i * placement - 40\n            });\n            i++;\n        }\n    }\n\n    function positionPreReqs() {\n        $(\"#COMP123\").css({\n            top: 300,\n            left: 50\n        });\n        $(\"#COMP127\").css({\n            top: 250,\n            left: 150\n        });\n        $(\"#COMP128\").css({\n            top: 280,\n            left: 250\n        });\n        $(\"#MATH279\").css({\n            top: 380,\n            left: 250\n        });\n        $(\"#COMP240\").css({\n            top: 180,\n            left: 400\n        });\n        $(\"#COMP221\").css({\n            top: 280,\n            left: 400\n        });\n        $(\"#COMP225\").css({\n            top: 380,\n            left: 400\n        });\n        $(\"#COMP261\").css({\n            top: 480,\n            left: 400\n        });\n    }\n}\n\nrun();\n\n"],"file":"VM_to_View.js"}